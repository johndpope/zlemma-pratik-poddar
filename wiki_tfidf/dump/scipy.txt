SciPy (pronounced “Sigh Pie”) is a computing environment and open source ecosystem of software for the Python programming language used by scientists, analysts and engineers doing scientific computing and technical computing. SciPy also refers to a specific open source library / Python package of algorithms and mathematical tools that form a core element of the SciPy environment for technical computing. The SciPy environment includes the NumPy and SciPy libraries, along with an expanding set of additional scientific computing libraries like IPython, Matplotlib, Pandas and SymPy.  It has similar users to other applications such as MATLAB, GNU Octave, and Scilab.

The name SciPy is also used by a family of conferences for users and developers of these tools: SciPy (in the United States), EuroSciPy and SciPy.in (in India).

SciPy contains modules for optimization, linear algebra, integration, interpolation, special functions, FFT, signal and image processing, ODE solvers and other tasks common in science and engineering.

SciPy is currently distributed under the BSD license, and its development is sponsored by an open community of developers.

==SciPy Scientific Computing Environment==
The SciPy environment includes many software tools. For example,
* Plotting. The currently recommended 2-D plotting package is Matplotlib, however, there are many other plotting packages such as HippoDraw, Chaco, and Biggles. Other popular graphics tools include Python Imaging Library and MayaVi (for 3D visualization).
* Optimization. While SciPy has its own optimization package, OpenOpt has access to more optimization solvers and can involve Automatic differentiation.
* Advanced data analysis. Via RPy, SciPy can interface to the R statistical package for advanced data analysis.
* Database. SciPy can interface with PyTables, a hierarchical database package designed to efficiently manage large amounts of data using HDF5.
* Interactive shell. IPython is an interactive environment that offers debugging and coding features similar to that which MATLAB offers.
* Symbolic mathematics. There are several Python libraries—such as PyDSTool Symbolic and SymPy—that offer symbolic mathematics.
* Specialized extensions. The "scikits" provide special-purpose add-ons to SciPy. Of these, scikit-image, scikit-learn and statsmodels are mature packages.

==The SciPy Library/Package==
SciPy is also a package of key algorithms and functions core to Python's scientific computing capabilities. Available sub-packages include:
* constants: physical constants and conversion factors (since version 0.7.0)
* cluster: hierarchical clustering, vector quantization, K-means
* fftpack: Discrete Fourier Transform algorithms
* integrate: numerical integration routines
* interpolate: interpolation tools
* io: data input and output
* lib: Python wrappers to external libraries
* linalg: linear algebra routines
* misc: miscellaneous utilities (e.g. image reading/writing)
* ndimage: various functions for multi-dimensional image processing
* optimize: optimization algorithms including linear programming
* signal: signal processing tools
* sparse: sparse matrix and related algorithms
* spatial: KD-trees, nearest neighbors, distance functions
* special: special functions
* stats: statistical functions
* weave: tool for writing C/C++ code as Python multiline strings

==Data structures==
The basic data structure in SciPy is a multidimensional array provided by the NumPy module. NumPy provides some functions for linear algebra, Fourier transforms and random number generation, but not with the generality of the equivalent functions in SciPy. NumPy can also be used as an efficient multi-dimensional container of data with arbitrary data-types. This allows NumPy to seamlessly and speedily integrate with a wide variety of databases.Older versions of SciPy used Numeric as an array type, which is now deprecated in favor of the newer NumPy array code.

==History of SciPy==
In the 1990s, Python was extended to include an array type for numerical computing which eventually evolved into the current NumPy package. As of 2000, there was a growing number of extension modules and increasing interest in creating a complete environment for scientific and technical computing. In 2001, Travis Oliphant, Eric Jones, and Pearu Peterson merged code they'd written, and called the resulting package SciPy. The newly created package provided a standard collection of common numerical operations on top of the Numeric array data structure. Shortly thereafter, Fernando Pérez released IPython, an enhanced interactive shell widely used in the technical computing community, and John Hunter released the first version of Matplotlib, the 2D plotting library for technical computing. Since then the SciPy environment has continued to grow with more packages and tools for technical computing.

==See also==

* List of numerical analysis software
* Comparison of numerical analysis software
* Sage (mathematics software)

==External links==
* 
* SciPy Course Outline by Dave Kuhlman
* Python Scientific Lecture Notes

==Notes==