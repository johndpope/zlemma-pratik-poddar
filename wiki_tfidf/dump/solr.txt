Solr (pronounced "solar") is an open source enterprise search platform from the Apache Lucene project. Its major features include full-text search, hit highlighting, faceted search, dynamic clustering, database integration, and rich document (e.g., Word, PDF) handling. Providing distributed search and index replication, Solr is highly scalable. Solr is the most popular enterprise search engine. Solr 4 adds NoSQL features.

Solr is written in Java and runs as a standalone full-text search server within a servlet container such as Apache Tomcat or Jetty. Solr uses the Lucene Java search library at its core for full-text indexing and search, and has REST-like HTTP/XML and JSON APIs that make it usable from most popular programming languages. Solr's powerful external configuration allows it to be tailored to many types of application without Java coding, and it has a plugin architecture to support more advanced customization.

Apache Lucene and Apache Solr are both produced by the same Apache Software Foundation development team since the two projects were merged in 2010.  It is common to refer to the technology or products as Lucene/Solr or Solr/Lucene.

== History ==
In 2004, Solr was created by Yonik Seeley at CNET Networks as an in-house project to add search capability for the company website. Yonik Seeley along with Grant Ingersoll and Erik Hatcher went on to launch LucidWorks (formerly Lucid Imagination), a company providing commercial support, consulting and training for Apache Solr search technologies.

In January 2006, CNET Networks decided to openly publish the source code by donating it to the Apache Software Foundation under the Lucene top-level project. Like any new project at Apache Software Foundation it entered an incubation period which helped solve organizational, legal, and financial issues.

In January 2007, Solr graduated from incubation status and grew steadily with accumulated features, thereby attracting a robust community of users, contributors, and committers. Although quite new as a public project, it powers several high-traffic websites.

In September 2008, Solr 1.3 was released with many enhancements including distributed search capabilities and performance enhancements among many others.

November 2009 saw the release of Solr 1.4 This version introduces enhancements in indexing, searching and faceting along with many other improvements such as Rich Document processing (PDF, Word, HTML), Search Results clustering based on Carrot2 and also improved database integration. The release also features many additional plug-ins.

In March 2010, the Lucene and Solr projects merged.  Separate downloads will continue, but the products are now jointly developed by a single set of committers.

In 2011 the Solr version number scheme was changed in order to match that of Lucene. After Solr 1.4, the next release of Solr was labeled 3.1, in order to keep Solr and Lucene on the same version number.

In October 2012 Solr version 4.0 was released, including the new SolrCloud feature.

2013 has seen a number of Solr releases already, including 4.1 in January, 4.2 in March, 4.2.1 in April and 4.3.0 in May, including many improvements in the SolrCloud features such as custom sharding.

== Features ==
* Uses the Lucene library for full-text search
* Faceted navigation
* Hit highlighting
* Query language supports structured as well as textual search
* JSON, XML, PHP, Ruby, Python, XSLT, Velocity and custom Java binary output formats over HTTP
* HTML administration interface
* Replication to other Solr servers - enables scaling QPS
* Distributed Search through Sharding - enables scaling content volume
* Search results clustering based on Carrot2
* Extensible through plugins
* Flexible relevance - boost through function queries
* Caching - queries, filters, and documents
* Embeddable in a Java Application
* Geo-spatial search
* Automated management of large clusters through ZooKeeper
* More function queries
* Field Collapsing  
* A new auto-suggest component

== Community and future ==
Solr has an active development community, both individuals and companies, who contribute new features and bug fixes.

== Integrating Solr ==

There are many community projects for integrating Solr with many programming languages and environments.

== See also ==

* Search oriented architecture
* eGranary Digital Library
* List of information retrieval libraries

==References==

==Bibliography==

* 
* 
*

==External links==
* Solr homepage
* Solr tutorial
* Solr wiki
* Apache Solr Test Files
* Solr: Indexing XML with Lucene and REST
* Search smarter with Apache Solr, Part 1
* Search smarter with Apache Solr, Part 2
* What's new with Apache Solr