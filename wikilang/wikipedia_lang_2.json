{"algol60":"imperative",
"fortran":"generic,imperative,object-oriented,procedural",
"simula":"discreteeventsimulation,event-driven,imperative,multi-threaded(quasi-parallel)programexecution,object-oriented",
"algol68":"concurrent,imperative",
"pl/i":"imperative,object-oriented,procedural",
"ada":"concurrent,distributed,generic,imperative,object-oriented,procedural",
"basic":"imperative,procedural",
"pascal":"imperative,procedural",
"c":"imperative,procedural",
"apl":"array-oriented,tacit",
"commonlisp":"functional,generic,imperative,object-oriented,reflective",
"forth":"imperative,stack-oriented",
"prolog":"logic",
"actionscript3.0":"event-driven,imperative,object-oriented",
"javascript":"functional,imperative,prototype-based,reflective",
"islisp":"functional,generic,imperative,object-oriented",
"standardml":"functional,generic,imperative",
"smalltalk":"concurrent,declarative,event-driven,object-oriented,reflective",
"c++":"imperative,object-oriented,procedural,functional",
"scheme":"functional",
"c#":"structured,functional,generic,imperative,object-oriented,reflective,concurrent,event-driven",
"cobol":"imperative,object-oriented",
"eiffel":"generic,imperative,object-oriented",
"haskell":"functional,generic,lazyevaluation",
"ruby":"aspect-oriented,functional,imperative,object-oriented,reflective",
"java":"generic,imperative,object-oriented,reflective,concurrent",
"scala":"functional,generic,imperative,object-oriented",
"beanshell":"functional,imperative,object-oriented,reflective",
"groovy":"aspect-oriented,imperative,object-oriented,functional",
"aldor":"imperative,functional,object-oriented",
"algol58":"imperative",
"atejipx":"object-oriented,picalculus",
"autohotkey":"imperative",
"autoit":"event-driven,imperative,procedural",
"bbj":"object-oriented,procedural",
"bitc":"functional,imperative",
"bliss":"procedural",
"blitzmax":"imperative,object-oriented,procedural",
"clean":"functional,generic",
"clojure":"concurrent,functional",
"clu":"generic,imperative,object-oriented,procedural",
"cobra":"functional,generic,imperative,object-oriented,reflective",
"coldfusion(cfml)":"object-oriented,procedural",
"comal80":"imperative,procedural",
"crystal1.0.0":"functional,imperative,procedural",
"cython":"aspect-oriented,functional,imperative,object-oriented,reflective",
"d":"generic,generative,imperative,object-oriented,functional,concurrent",
"dart":"imperative,structured,object-oriented",
"dylan":"functional,object-oriented",
"erlang":"concurrent,distributed,functional",
"euphoria":"procedural,reflective",
"factor":"stack-oriented",
"falcon":"procedural,functional,objectoriented,prototypeoop,messageoriented,tabularprogramming",
"fp":"functional",
"f#":"functional,generic,imperative,object-oriented",
"g2":"commongraphicaldevelopmentandruntimeenvironment,event-driven,imperative,object-oriented",
"gambas":"event-driven,imperative,object-oriented",
"gamemakerlanguage":"event-driven,imperative,object-oriented",
"glbasic":"imperative,procedural,object-oriented",
"go":"concurrent,imperative",
"gosu":"generic,imperative,object-oriented,reflective",
"graphtalk":"logic,object-oriented",
"harbour":"declarative,functional,generic,imperative,object-oriented,procedural,reflective",
"haxe":"imperative,object-oriented,functional,generic,reflective",
"hypernext":"event-driven,procedural,weaklytyped",
"io":"imperative,object-oriented",
"j":"array-oriented,function-level,tacit",
"jade":"imperative,object-oriented",
"joy":"functional,stack-oriented",
"labview(g)":"dataflow,visual",
"logtalk":"event-driven,logic,object-oriented,reflective",
"maple":"procedural,functional,imperative,object-oriented,distributed",
"mathematica":"functional,procedural,imperative,logic,distributed,object-oriented",
"matlab":"imperative,object-oriented,procedural",
"oberon":"imperative,object-oriented",
"occam":"concurrent,imperative,procedural,process-oriented",
"opa":"functional,generic,imperative,distributed",
"oxygene":"generic,imperative,object-oriented",
"oz":"concurrent,functional,imperative,logic,object-oriented",
"pawn":"imperative",
"perl":"functional,generic,imperative,object-oriented,procedural,reflective",
"php":"imperative,object-oriented,procedural,reflective",
"plus":"imperative,procedural",
"purebasic":"procedural",
"python":"aspect-oriented,functional,imperative,object-oriented,reflective",
"racket":"functional,procedural,modular,object-oriented,logic,reflective,meta",
"rebol":"dialected,functional,imperative,object-oriented",
"rpg(ibm)":"imperative,procedural",
"rust":"concurrent,functional,generic,imperative,object-oriented,reflective",
"s":"functional,imperative,object-oriented,procedural",
"s-lang":"imperative,procedural",
"smallbasic":"component-oriented,event-driven,imperative",
"tcl":"event-driven,imperative,procedural,reflective",
"visualbasic":"component-oriented,event-driven,imperative",
"visualbasic.net":"event-driven,imperative,object-oriented",
"visualfoxpro":"data-centric,logic,object-oriented",
"visualprolog":"declarative,event-driven,functional,imperative,logic,object-oriented",
"windowspowershell":"functional,imperative,object-oriented,pipeline,reflective",
"xl":"conceptprogramming,imperative,object-oriented",
"lua":"aspect-oriented,functional,imperative,object-oriented,procedural,reflective",
"clarion":"functional,imperative,object-oriented",
"k":"array-oriented,tacit",
"lisp":"functional",
"realbasic":"procedural"
}

